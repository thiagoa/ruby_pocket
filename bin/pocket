#!/usr/bin/env ruby

require 'pathname'

$LOAD_PATH << Pathname(__dir__).join('..', 'config')
$LOAD_PATH << Pathname(__dir__).join('..', 'lib')

require 'optparse'
require 'ruby_pocket'
require 'config'
require 'ruby_pocket/all'

include RubyPocket

options = Cli::Options.new

option_parser = OptionParser.new do |opts|
  opts.banner = <<-HEADER
  Ruby Pocket - A warm place to store your development references

  Usage: #{File.basename($PROGRAM_NAME)} [action] [options]
  HEADER

  opts.separator ""
  opts.separator "Available actions:"
  opts.separator ""

  opts.on('-a URL', '--add URL', 'Add a favorite by URL') do |url|
    options.action = :add
    options.values[:url] = url
  end

  opts.on('-l', '--list', 'List available favorites') do
    options.action = :list
  end

  opts.on('-d ID', '--delete ID', Array, 'Delete a favorite') do |ids|
    options.action = :delete
    options.values[:ids] = ids.map(&:to_i)
  end

  opts.on('-o ID', '--open ID', Integer, 'Open a favorite on the browser') do |id|
    options.action = :open
    options.values[:id] = id
  end

  opts.separator ""
  opts.separator "Optional available flags:"
  opts.separator ""

  opts.on('-n NAME', '--name NAME', 'Favorite name') do |name|
    options.values[:name] = name
  end

  opts.on('-t TAGS', '--tag TAGS', Array, 'Comma-separated tags') do |tags|
    options.values[:tag_names] = tags
  end
end

begin
  option_parser.parse!
  options.validate!

  Cli.dispatch options
rescue ArgumentError, OptionParser::ParseError, RubyPocketError => e
  abort "Error: #{e.message}"
end
